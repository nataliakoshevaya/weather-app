{"version":3,"sources":["components/Errors/search-error.module.css","components/preloader/preloader.module.css","redux/weatherReducer.js","redux/errorReducer.js","components/search-panel/search-panel.jsx","components/Errors/SearchError.jsx","assets/img/loading.gif","components/preloader/preloader.jsx","components/weather/current-weather-day/current-weather-day.jsx","components/weather/day-card/day-card.jsx","components/weather/weather.jsx","components/weather/weather-container.jsx","App.js","reportWebVitals.js","redux/redux.js","index.js"],"names":["module","exports","SET_CITY","SET_FETCHING_TOGGLE","InitialState","weather","city","isFetching","weatherReducer","state","action","type","currentCity","toggle","SEARCH_ERROR","searchError","getSearchError","error","errorReducer","SearchPanel","getCityForState","e","target","value","console","log","props","getCity","getWeather","preventDefault","axios","get","then","response","setWeather","data","catch","message","setTimeout","className","onSubmit","this","name","onChange","placeholder","icon","faSearch","Component","SearchPanelContainer","connect","SearchError","style","errorWrapper","errorTitle","Preloader","wrapper","src","preloader","alt","CurrentWeatherDay","country","temperature","description","day","hours","minutes","windSpeed","pressure","humidity","clodness","DayCard","temp","Weather","list","currentWeather","iconCode","id","iconUrl","dayData","dt_txt","split","d","Date","getZero","num","getMinutes","getHours","getWeekDay","getDay","filterData","filter","reading","includes","slice","map","Math","round","main","dt","wind","speed","clouds","all","WeatherContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b35ece66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorTitle\":\"search-error_errorTitle__1ukLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"preloader_wrapper__21btg\"};","const SET_WEATHER = \"SET-WEATHER\";\r\nconst SET_CITY = \"SET-CITY\";\r\nconst SET_FETCHING_TOGGLE = 'SET_FETCHING_TOGGLE';\r\n\r\nconst InitialState = {\r\n    weather: [],\r\n    city: '',\r\n    isFetching: false\r\n};\r\n\r\n\r\nconst weatherReducer = (state = InitialState, action) => {\r\n    switch(action.type) {\r\n        case \"SET-WEATHER\":\r\n          return {\r\n              ...state,\r\n              weather: action.weather,\r\n              city:''\r\n          }\r\n        case SET_CITY: \r\n         return {\r\n             ...state,\r\n            city: action.currentCity\r\n        }  \r\n        case SET_FETCHING_TOGGLE:\r\n            return {\r\n                ...state,\r\n                isFetching: action.toggle\r\n        }  \r\n        default: return state\r\n    }\r\n};\r\n\r\nexport const setWeather = (weather) => {\r\n    return {\r\n        type: SET_WEATHER,\r\n        weather\r\n    }\r\n}\r\n\r\nexport const getCity = (currentCity) => {\r\n    return {\r\n        type: SET_CITY,\r\n        currentCity\r\n    }\r\n}\r\n\r\nexport const isFetching = (toggle) => {\r\n    return {\r\n        type: SET_FETCHING_TOGGLE,\r\n        toggle\r\n    }\r\n}\r\n\r\nexport default weatherReducer;","const SEARCH_ERROR = \"SEARCH_ERROR\";\r\n\r\nconst InitialState = {\r\n    searchError: false\r\n};\r\n\r\n\r\nconst errorReducer = (state = InitialState, action) => {\r\n    switch(action.type) {\r\n        case SEARCH_ERROR:\r\n          return {\r\n              ...state,\r\n              searchError: action.error\r\n          }\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport const getSearchError = (error) => {\r\n    return {\r\n        type: SEARCH_ERROR,\r\n        error\r\n    }\r\n}\r\n\r\nexport default errorReducer;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getCity, setWeather, isFetching} from '../../redux/weatherReducer';\r\nimport {getSearchError} from '../../redux/errorReducer'\r\nimport axios from 'axios';\r\n\r\nclass SearchPanel extends Component {\r\n    getCityForState = (e) => {\r\n        if(e.target.value === '') { console.log(this.props) }\r\n        \r\n        let city = e.target.value\r\n        this.props.getCity(city)\r\n    }\r\n\r\n    getWeather = (e) => {\r\n        e.preventDefault();\r\n            this.props.isFetching(false)\r\n            axios\r\n                .get(`https://api.openweathermap.org/data/2.5/forecast?q=${this.props.city}&appid=6e215ba5ef08bdf570de5cd7304cd8cf&units=metric`)\r\n                .then(response => {\r\n                        this.props.isFetching(true);\r\n                        this.props.setWeather(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Error', error.message);\r\n                    this.props.getSearchError(true)\r\n                    setTimeout(() => this.props.getSearchError(false), 2000)\r\n                })\r\n    };\r\n \r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"mb-3\">\r\n                <form onSubmit={this.getWeather}>\r\n                <div className=\"input-group\">\r\n                    <input \r\n                            type=\"text\"  \r\n                            name=\"city\"\r\n                            onChange={this.getCityForState}\r\n                            value = {this.props.city}\r\n                            className=\"form-control\" \r\n                            placeholder=\"Search for a city...\" \r\n                            />\r\n                    <button type=\"submit\"><FontAwesomeIcon icon={faSearch} /></button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProp = (state) => {\r\n    return {\r\n        weather: state.weather.weather,\r\n        city: state.weather.city,\r\n        searchError: state.error.searchError\r\n    }\r\n}\r\n\r\n\r\n\r\nconst SearchPanelContainer = connect(mapStateToProp, {getCity, setWeather, isFetching, getSearchError})(SearchPanel);\r\n\r\nexport default SearchPanelContainer;","import style from \"./search-error.module.css\";\r\n\r\nconst SearchError = () => {\r\n  return (\r\n    <div className={style.errorWrapper}>\r\n        <h2 className={style.errorTitle}>\r\n          Something went wrong! Please try enter your city again!\r\n        </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchError;\r\n","export default __webpack_public_path__ + \"static/media/loading.2e6d61f0.gif\";","import preloader from '../../assets/img/loading.gif';\r\nimport style from './preloader.module.css';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <img src={preloader} alt=\"spinner\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","const CurrentWeatherDay = (props) => {\r\n    return (\r\n        <div className=\"wrapper card mb-4\">\r\n            <div className=\"weather__location\">\r\n                <div className=\"weather__location--city\">{props.city}</div>\r\n                <div className=\"weather__location--country\">{props.country}</div>\r\n            </div>\r\n            <div className=\"weather__temperature\">{props.temperature} &#8451;</div>\r\n            <div className=\"weather__icon\">\r\n                <i className={props.icon}></i>\r\n            </div>\r\n            <div className=\"weather__description\">\r\n                {props.description}\r\n            </div>\r\n            <div className='weather__daytime'>\r\n                <div className=\"weather__daytime--day\">{props.day}</div>\r\n                <div className=\"weather__daytime--time\">{props.hours} : {props.minutes}</div>\r\n            </div>\r\n            <div className=\"weather__windy\">Wind: {props.windSpeed} m/s</div>\r\n            <div className=\"weather__press\">Pressure: {props.pressure} hPa</div>\r\n            <div className=\"weather__humidity\">Humidity: {props.humidity}%</div>\r\n            <div className=\"weather__cloudness\">Clodness: {props.clodness}%</div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default CurrentWeatherDay;\r\n\r\n","const DayCard = (props) => {\r\n    return (\r\n        <div className=\"col mb-4\">\r\n           <div className=\"card h-100\">\r\n           <div className=\"currentDay\">{props.day}</div>\r\n            <div className=\"currentTemp\">{props.temp} &#8451;</div>\r\n            <div className=\"currentDescription\">{props.description}</div>\r\n            <i className={props.icon}></i>\r\n           </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DayCard;","import SearchError from \"../Errors/SearchError\";\r\nimport Preloader from \"../preloader/preloader\";\r\nimport CurrentWeatherDay from \"./current-weather-day/current-weather-day\";\r\nimport DayCard from \"./day-card/day-card\";\r\n\r\nconst Weather = (props) => {\r\n    if(props.searchError) {\r\n        \r\n        return <SearchError />\r\n        \r\n    }\r\n\r\n    if (!props.weather.list) {\r\n        return <div>Please enter city</div>\r\n    }\r\n\r\n    if(!props.isFetching) {\r\n        return <Preloader />;\r\n    }       \r\n\r\n    let currentWeather = props.weather.list[0];\r\n    let iconCode = currentWeather.weather[0].id\r\n    let iconUrl = `owf owf-${iconCode} owf-5x`;\r\n    let dayData = currentWeather.dt_txt.split(' ');\r\n    let d = new Date(dayData);\r\n\r\n    function getZero(num) {\r\n        if (num <= 10) {\r\n            return `0${num}`\r\n        } else {\r\n            return num\r\n        }\r\n    }\r\n    let minutes = getZero(d.getMinutes());\r\n    let hours = getZero(d.getHours());\r\n\r\n    function getWeekDay(day) {\r\n        let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\n        return days[day.getDay()]\r\n    }\r\n\r\n    let day = getWeekDay(d);\r\n    \r\n    let dailyData = props.weather.list.filter(reading => reading.dt_txt.includes(\"18:00:00\")).slice(1);\r\n    \r\n    let filterData = dailyData.map(day => {\r\n        let dayData = day.dt_txt.split(' ');\r\n        let d = new Date(dayData);\r\n        let data = getWeekDay(d);\r\n        let iconCode = day.weather[0].id;\r\n        let iconUrl = `owf owf-${iconCode} owf-5x`;\r\n        return <DayCard \r\n                        day={data}\r\n                        key={day.dt}\r\n                        temp={Math.round(day.main.temp)}\r\n                        description={day.weather[0].description}\r\n                        icon={iconUrl}/>\r\n    })\r\n    \r\n    return (\r\n        <div >\r\n            <CurrentWeatherDay\r\n                key={props.weather.id}\r\n                city={props.weather.city.name}\r\n                country={props.weather.city.country}\r\n                temperature={Math.round(currentWeather.main.temp)}\r\n                icon={iconUrl}\r\n                description={currentWeather.weather[0].description}\r\n                day={day}\r\n                hours={hours}\r\n                minutes={minutes}\r\n                windSpeed={currentWeather.wind.speed}\r\n                pressure={currentWeather.main.pressure}\r\n                humidity={currentWeather.main.humidity}\r\n                clodness={currentWeather.clouds.all}\r\n            />\r\n            \r\n            <div className=\"row\">\r\n             {filterData}\r\n          </div> \r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Weather;","import { connect } from \"react-redux\";\r\nimport Weather from \"./weather\";\r\nimport {getSearchError} from '../../redux/errorReducer'\r\n\r\n\r\nlet mapStateToProp = (state) => ({\r\n    weather: state.weather.weather,\r\n    city: state.weather.city,\r\n    isFetching: state.weather.isFetching,\r\n    searchError: state.error.searchError\r\n})\r\n\r\nconst WeatherContainer = connect(mapStateToProp, {getSearchError})(Weather);\r\n\r\nexport default WeatherContainer;\r\n\r\n","import './App.css';\nimport SearchPanel from './components/search-panel/search-panel';\nimport {Component} from 'react';\nimport WeatherContainer from './components/weather/weather-container';\n\nclass App extends  Component {\n render() {\n  return (\n    <div className=\"App\">\n       <div className=\"container\">\n          <SearchPanel />\n          <WeatherContainer />\n        </div>\n    </div>\n  );\n }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from 'redux';\r\nimport weatherReducer from './weatherReducer';\r\nimport errorReducer from './errorReducer'\r\n\r\nlet reducer = combineReducers({\r\n    error: errorReducer,\r\n    weather: weatherReducer\r\n})\r\n\r\nlet store = createStore(reducer);\r\n\r\nexport default store; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}